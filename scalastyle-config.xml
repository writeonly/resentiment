<scalastyle>
 <name>Scalastyle standard configuration</name>
 <check level="error" class="org.scalastyle.file.FileTabChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.file.FileLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxFileLength"><![CDATA[800]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.file.HeaderMatchesChecker" enabled="false"/>
 <check level="error" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxLineLength"><![CDATA[160]]></parameter>
   <parameter name="tabSize"><![CDATA[4]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
  <parameters>
   <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
  <parameters>
   <parameter name="maxParameters"><![CDATA[8]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="true">
  <parameters>
   <parameter name="ignore"><![CDATA[-1,0,1,2,3]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.scalariform.NullChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.file.RegexChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[println]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
  <parameters>
   <parameter name="maxTypes"><![CDATA[30]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
  <parameters>
   <parameter name="maximum"><![CDATA[2]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
  <parameters>
   <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
   <parameter name="doubleLineAllowed"><![CDATA[true]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxLength"><![CDATA[50]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
  <parameters>
   <parameter name="maxMethods"><![CDATA[30]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"></check>

 <check enabled="true" class="org.scalastyle.file.IndentationChecker" level="error">
  <parameters>
   <parameter name="tabSize">2</parameter>
   <parameter name="methodParamIndentSize">2</parameter>
   <parameter name="classParamIndentSize">4</parameter>
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.BlockImportChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.ClassTypeParameterChecker" level="error">
  <parameters>
   <parameter name="regex">^[A-Z_]$</parameter>
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.DeprecatedJavaChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.DisallowSpaceAfterTokenChecker" level="error">
  <parameters>
   <parameter name="tokens">LPAREN</parameter>
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.DisallowSpaceBeforeTokenChecker" level="error">
  <parameters>
   <parameter name="tokens">COLON, COMMA, RPAREN</parameter>
   <!--<parameter name="tokens">COLON, COMMA</parameter>-->
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.EmptyClassChecker" level="error"/>
 <check enabled="true" level="error" class="org.scalastyle.scalariform.EmptyInterpolatedStringChecker"/>
 <check enabled="true" class="org.scalastyle.scalariform.EnsureSingleSpaceAfterTokenChecker" level="error">
  <parameters>
   <parameter name="tokens">COLON, IF</parameter>
  </parameters>
 </check>
 <check enabled="false" class="org.scalastyle.scalariform.EnsureSingleSpaceBeforeTokenChecker" level="error">
  <parameters>
   <parameter name="tokens">LPAREN</parameter>
  </parameters>
 </check>
 <check enabled="false" class="org.scalastyle.scalariform.FieldNamesChecker" level="error">
  <parameters>
   <parameter name="regex">^[a-z][A-Za-z0-9]*$</parameter>
   <parameter name="objectFieldRegex">^[A-Z][A-Za-z0-9]*$</parameter>
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.ForBraceChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.ImportGroupingChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.ImportOrderChecker" level="error">
  <parameters>
   <parameter name="groups">java,scala,others</parameter>
   <parameter name="group.java">javax?\..+</parameter>
   <parameter name="group.scala">scala\..+</parameter>
   <parameter name="group.others">.+</parameter>
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.LowercasePatternMatchChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.MethodArgumentNamesChecker" level="error">
  <parameters>
   <parameter name="regex">^[a-z][A-Za-z0-9]*$</parameter>
   <parameter name="ignoreRegex">^$</parameter>
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.MultipleStringLiteralsChecker" level="error">
  <parameters>
   <parameter name="allowed">2</parameter>
   <parameter name="ignoreRegex">^\&quot;\&quot;$</parameter>f
  </parameters>
 </check>
 <check enabled="false" class="org.scalastyle.scalariform.NamedArgumentChecker" level="error">
  <parameters>
   <parameter name="checkString">false</parameter>
   <parameter name="ignoreMethod">^set.+$</parameter>
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.NoWhitespaceBeforeRightBracketChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.NonASCIICharacterChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.NotImplementedErrorUsage" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.OverrideJavaChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.PatternMatchAlignChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.RedundantIfChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.ScalaDocChecker" level="error">
  <parameters>
   <parameter name="ignoreRegex">(.*Spec$)|(.*SpecIT$)</parameter>
   <parameter name="ignoreTokenTypes">PatDefOrDcl,TypeDefOrDcl,FunDefOrDcl,TmplDef</parameter>
   <parameter name="ignoreOverride">false</parameter>
   <parameter name="indentStyle">anydoc</parameter>
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.SpaceAfterCommentStartChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.TodoCommentChecker" level="error">
  <parameters>
   <parameter default="TODO|FIXME" type="string" name="words"/>
  </parameters>
 </check>
 <check enabled="false" class="org.scalastyle.scalariform.UnderscoreImportChecker" level="error">
  <parameters>
   <parameter name="ignoreRegex">collection\.JavaConverters\._|scala\.concurrent\.duration\._</parameter>
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.VarFieldChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.VarLocalChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.WhileChecker" level="error"/>
 <check enabled="true" class="org.scalastyle.scalariform.XmlLiteralChecker" level="error"/>

</scalastyle>